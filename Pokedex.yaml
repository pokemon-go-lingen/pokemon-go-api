openapi: 3.0.0
info:
  title: Pokedex
  version: '1.0'
  description: Pokedex for Pokemon GO
servers:
  - url: 'https://pokemon-go-lingen.github.io/pokemon-go-api'
tags:
  - name: Pokemon
  - name: Raid
  - name: Utils
paths:
  /api/pokedex.json:
    get:
      description: A full list of all Pokemon available in Pokemon GO
      summary: A full list of all Pokemon available in Pokemon GO
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex.json
  /api/pokedex/mega.json:
    get:
      description: List of all available Mega Pokemon
      summary: List of all available Mega Pokemon
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex-mega.json
  '/api/pokedex/generation/{generationNumber}.json':
    get:
      description: List all Pokemon in the given generation number
      summary: List all Pokemon in the given generation number
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex-generation-id.json
    parameters:
      - schema:
          type: number
        name: generationNumber
        in: path
        required: true
  '/api/pokedex/id/{id}.json':
    get:
      description: Receive a single Pokemon by the Pokedex number
      summary: Receive a single Pokemon by the Pokedex number
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex-id-id.json
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
  '/api/pokedex/region/{name}.json':
    get:
      description: Receive all available Pokemon in the given region
      summary: Receive all available Pokemon in the given region
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex-region-name.json
    parameters:
      - schema:
          type: string
          enum:
            - alola
            - galarian
        name: name
        in: path
        required: true
  '/api/pokedex/name/{name}.json':
    get:
      description: Receive a single Pokemon by the PokemonGo internal name in UPPERCASE
      summary: Receive a single Pokemon by the PokemonGo internal name in UPPERCASE
      tags:
        - Pokemon
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pokemon'
      operationId: get-api-pokedex-name-name.json
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
  /api/raidboss.json:
    get:
      summary: Receive the current raid Bosses
      tags:
        - Raid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  currentList:
                    type: object
                    required:
                      - lvl1
                      - lvl3
                      - lvl5
                      - mega
                    properties:
                      lvl1:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          $ref: '#/components/schemas/RaidBoss'
                      lvl3:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          $ref: '#/components/schemas/RaidBoss'
                      lvl5:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          $ref: '#/components/schemas/RaidBoss'
                      mega:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          $ref: '#/components/schemas/RaidBoss'
                      ex:
                        type: array
                        items:
                          $ref: '#/components/schemas/RaidBoss'
                  graphics:
                    type: object
                    required:
                      - German
                      - English
                    properties:
                      German:
                        type: object
                        required:
                          - svg
                          - png
                          - sha512
                        properties:
                          svg:
                            type: string
                          png:
                            type: string
                          sha512:
                            type: string
                      English:
                        type: object
                        required:
                          - svg
                          - png
                          - sha512
                        properties:
                          svg:
                            type: string
                          png:
                            type: string
                          sha512:
                            type: string
                required:
                  - currentList
                  - graphics
      operationId: get-api-raidboss.json
      description: Return the current raid bosses
  /api/hashes.json:
    get:
      summary: Return the hashes of the latest generated API resources to avoid unnecessary calls
      tags:
        - Utils
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  sha512:
                    type: object
                    required:
                      - raidboss.json
                      - pokedex.json
                    properties:
                      raidboss.json:
                        type: string
                        minLength: 128
                        maxLength: 128
                      pokedex.json:
                        type: string
                        minLength: 128
                        maxLength: 128
                required:
                  - sha512
              examples: {}
      operationId: get-api-hashes.json
      description: Receive the latest hashes of the endpoints to prevent unnessecary calls to larger API Endpoints
components:
  schemas:
    Pokemon:
      description: ''
      type: object
      properties:
        id:
          type: string
          minLength: 1
        formId:
          type: string
          minLength: 1
        dexNr:
          type: number
        generation:
          type: number
        names:
          $ref: '#/components/schemas/Names'
        stats:
          $ref: '#/components/schemas/PokemonStats'
        primaryType:
          $ref: '#/components/schemas/Type'
        secondaryType:
          oneOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
        quickMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        cinematicMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        eliteQuickMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        eliteCinematicMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        assets:
          $ref: '#/components/schemas/Assets'
        regionForms:
          type: array
          items:
            $ref: '#/components/schemas/RegionPokemon'
        hasMegaEvolution:
          type: boolean
        megaEvolutions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MegaEvolution'
      required:
        - id
        - formId
        - dexNr
        - generation
        - names
        - stats
        - primaryType
        - secondaryType
        - cinematicMoves
        - eliteQuickMoves
        - eliteCinematicMoves
        - assets
        - hasMegaEvolution
        - megaEvolutions
    RegionPokemon:
      description: ''
      type: object
      properties:
        id:
          type: string
        formId:
          type: string
          minLength: 1
        dexNr:
          type: number
        generation:
          type: number
        names:
          $ref: '#/components/schemas/Names'
        stats:
          $ref: '#/components/schemas/PokemonStats'
        primaryType:
          $ref: '#/components/schemas/Type'
        secondaryType:
          oneOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
        quickMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        cinematicMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        eliteQuickMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        eliteCinematicMoves:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PokemonMove'
        assets:
          $ref: '#/components/schemas/Assets'
        forms:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                $ref: '#/components/schemas/Names'
              assets:
                $ref: '#/components/schemas/Assets'
      required:
        - id
        - formId
        - dexNr
        - generation
        - names
        - stats
        - primaryType
        - secondaryType
        - cinematicMoves
        - eliteQuickMoves
        - eliteCinematicMoves
        - assets
        - forms
    Names:
      description: ''
      type: object
      properties:
        English:
          type: string
        German:
          type: string
        French:
          type: string
        Italian:
          type: string
        Japanese:
          type: string
        Korean:
          type: string
        Spanish:
          type: string
      required:
        - English
        - German
    Type:
      description: ''
      type: object
      required:
        - type
        - names
      properties:
        type:
          type: string
          minLength: 1
        names:
          $ref: '#/components/schemas/Names'
    PokemonStats:
      description: ''
      type: object
      properties:
        stamina:
          type: number
        attack:
          type: number
        defense:
          type: number
      required:
        - stamina
        - attack
        - defense
    PokemonMove:
      description: ''
      type: object
      properties:
        id:
          type: string
          minLength: 1
        power:
          type: number
        energy:
          type: number
        durationMs:
          type: number
        type:
          $ref: '#/components/schemas/Type'
        names:
          $ref: '#/components/schemas/Names'
        combat:
          type: object
          nullable: true
          required:
            - energy
            - power
            - buffs
          properties:
            energy:
              type: number
            power:
              type: number
            buffs:
              type: object
              nullable: true
              properties:
                activationChance:
                  type: integer
                attackerAttackStatsChange:
                  type: integer
                  nullable: true
                attackerDefenseStatsChange:
                  type: integer
                  nullable: true
                targetAttackStatsChange:
                  type: integer
                  nullable: true
                targetDefenseStatsChange:
                  type: integer
                  nullable: true
      required:
        - id
        - power
        - energy
        - durationMs
        - type
        - names
        - combat
    Assets:
      title: Assets
      type: object
      properties:
        image:
          type: string
        shiny_image:
          type: string
    MegaEvolution:
      title: MegaEvolution
      type: object
      required:
        - id
        - names
        - stats
        - primaryType
        - secondaryType
        - assets
      properties:
        id:
          type: string
          minLength: 1
        names:
          $ref: '#/components/schemas/Names'
        stats:
          $ref: '#/components/schemas/PokemonStats'
        primaryType:
          $ref: '#/components/schemas/Type'
        secondaryType:
          oneOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
        assets:
          $ref: '#/components/schemas/Assets'
    RaidBoss:
      description: ''
      type: object
      properties:
        id:
          type: string
        form:
          type: string
        assets:
          $ref: '#/components/schemas/Assets'
        level:
          type: string
          enum:
            - ex
            - mega
            - lvl5
            - lvl3
            - lvl1
        names:
          type: object
          required:
            - English
            - German
            - French
            - Italian
            - Japanese
            - Korean
            - Spanish
          properties:
            English:
              type: string
              minLength: 1
            German:
              type: string
              minLength: 1
            French:
              type: string
              minLength: 1
            Italian:
              type: string
              minLength: 1
            Japanese:
              type: string
              minLength: 1
            Korean:
              type: string
              minLength: 1
            Spanish:
              type: string
              minLength: 1
        shiny:
          type: boolean
        types:
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 2
          items:
            type: string
        counter:
          type: object
          additionalProperties:
            type: string
        weather:
          type: array
          minItems: 1
          maxItems: 2
          items:
            type: string
        cpRange:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: integer
        cpRangeBoost:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: integer
      required:
        - id
        - form
        - level
        - names
        - shiny
        - types
        - weather
        - cpRange
        - cpRangeBoost
